---
name: Build
on: [push]

jobs:
  build-ios:
    name: iOS
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Node cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      - name: Pods cache
        uses: actions/cache@v2
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Bundle cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup Fastlane
        run: |
          sudo gem install bundler
          sudo gem update bundler
          bundle config path vendor/bundle
          bundle install

      - name: Decode secrets
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG_PLIST }}
        run: |
          echo $FIREBASE_CONFIG > ios/GoogleService-Info.plist

      - name: Build app
        env:
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.PASSWORDS_REPO_DEPLOY_KEY }}
          FASTLANE_APPLE_ID: ${{ secrets.FASTLANE_USER }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_TEAM_ID: ${{ secrets.FASTLANE_TEAM_ID }}
          FASTLANE_ITC_TEAM_ID: ${{ secrets.FASTLANE_ITC_TEAM_ID }}
        run: yarn fastlane:ios deploy_adhoc

      - name: Upload IPA
        uses: actions/upload-artifact@v2
        with:
          name: ThaliApp.ipa
          path: ios

  build-android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout passwords repo
        uses: actions/checkout@v2
        with:
          repository: svthalia/ThaliApp-passwords
          path: thaliapp-passwords
          ssh-key: ${{ secrets.PASSWORDS_REPO_DEPLOY_KEY }}

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Node cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Bundle cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Decode secrets
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG_JSON }}
          GOOGLE_PLAY_CONFIG: ${{ secrets.GOOGLE_PLAY_CONFIG_JSON }}
          RELEASE_CONFIG: ${{ secrets.ANDROID_RELEASE_CONFIG }}
        run: |
          echo $GOOGLE_PLAY_CONFIG > google-play.json
          echo $FIREBASE_CONFIG > android/app/google-services.json
          echo $RELEASE_CONFIG > android/releaseSigning.properties

      - name: Setup Fastlane
        run: |
          sudo gem install bundler
          sudo gem update bundler
          bundle config path vendor/bundle
          bundle install

      - name: Build app
        env:
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: yarn fastlane:android deploy_adhoc

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/
