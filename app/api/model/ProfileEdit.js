/**
 * API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unknown
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProfileEdit model module.
 * @module model/ProfileEdit
 * @version unknown
 */
class ProfileEdit {
  /**
   * Constructs a new <code>ProfileEdit</code>.
   * @alias module:model/ProfileEdit
   */
  constructor() {
    ProfileEdit.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>ProfileEdit</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProfileEdit} obj Optional instance to populate.
   * @return {module:model/ProfileEdit} The populated <code>ProfileEdit</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ProfileEdit();

      if (data.hasOwnProperty('pk')) {
        obj['pk'] = ApiClient.convertToType(data['pk'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('first_name')) {
        obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
      }
      if (data.hasOwnProperty('last_name')) {
        obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
      }
      if (data.hasOwnProperty('address_street')) {
        obj['address_street'] = ApiClient.convertToType(
          data['address_street'],
          'String'
        );
      }
      if (data.hasOwnProperty('address_street2')) {
        obj['address_street2'] = ApiClient.convertToType(
          data['address_street2'],
          'String'
        );
      }
      if (data.hasOwnProperty('address_postal_code')) {
        obj['address_postal_code'] = ApiClient.convertToType(
          data['address_postal_code'],
          'String'
        );
      }
      if (data.hasOwnProperty('address_city')) {
        obj['address_city'] = ApiClient.convertToType(data['address_city'], 'String');
      }
      if (data.hasOwnProperty('address_country')) {
        obj['address_country'] = ApiClient.convertToType(
          data['address_country'],
          'String'
        );
      }
      if (data.hasOwnProperty('phone_number')) {
        obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
      }
      if (data.hasOwnProperty('show_birthday')) {
        obj['show_birthday'] = ApiClient.convertToType(
          data['show_birthday'],
          'Boolean'
        );
      }
      if (data.hasOwnProperty('website')) {
        obj['website'] = ApiClient.convertToType(data['website'], 'String');
      }
      if (data.hasOwnProperty('photo')) {
        obj['photo'] = ApiClient.convertToType(data['photo'], File);
      }
      if (data.hasOwnProperty('emergency_contact')) {
        obj['emergency_contact'] = ApiClient.convertToType(
          data['emergency_contact'],
          'String'
        );
      }
      if (data.hasOwnProperty('emergency_contact_phone_number')) {
        obj['emergency_contact_phone_number'] = ApiClient.convertToType(
          data['emergency_contact_phone_number'],
          'String'
        );
      }
      if (data.hasOwnProperty('profile_description')) {
        obj['profile_description'] = ApiClient.convertToType(
          data['profile_description'],
          'String'
        );
      }
      if (data.hasOwnProperty('nickname')) {
        obj['nickname'] = ApiClient.convertToType(data['nickname'], 'String');
      }
      if (data.hasOwnProperty('display_name_preference')) {
        obj['display_name_preference'] = ApiClient.convertToType(
          data['display_name_preference'],
          'String'
        );
      }
      if (data.hasOwnProperty('language')) {
        obj['language'] = ApiClient.convertToType(data['language'], 'String');
      }
      if (data.hasOwnProperty('receive_optin')) {
        obj['receive_optin'] = ApiClient.convertToType(
          data['receive_optin'],
          'Boolean'
        );
      }
      if (data.hasOwnProperty('receive_newsletter')) {
        obj['receive_newsletter'] = ApiClient.convertToType(
          data['receive_newsletter'],
          'Boolean'
        );
      }
      if (data.hasOwnProperty('receive_magazine')) {
        obj['receive_magazine'] = ApiClient.convertToType(
          data['receive_magazine'],
          'Boolean'
        );
      }
      if (data.hasOwnProperty('display_name')) {
        obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
      }
      if (data.hasOwnProperty('avatar')) {
        obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');
      }
      if (data.hasOwnProperty('birthday')) {
        obj['birthday'] = ApiClient.convertToType(data['birthday'], 'Date');
      }
      if (data.hasOwnProperty('starting_year')) {
        obj['starting_year'] = ApiClient.convertToType(data['starting_year'], 'Number');
      }
      if (data.hasOwnProperty('programme')) {
        obj['programme'] = ApiClient.convertToType(data['programme'], 'String');
      }
      if (data.hasOwnProperty('membership_type')) {
        obj['membership_type'] = ApiClient.convertToType(
          data['membership_type'],
          'String'
        );
      }
      if (data.hasOwnProperty('achievements')) {
        obj['achievements'] = ApiClient.convertToType(data['achievements'], 'String');
      }
      if (data.hasOwnProperty('societies')) {
        obj['societies'] = ApiClient.convertToType(data['societies'], 'String');
      }
    }
    return obj;
  }
}

/**
 * @member {String} pk
 */
ProfileEdit.prototype['pk'] = undefined;

/**
 * @member {String} email
 */
ProfileEdit.prototype['email'] = undefined;

/**
 * @member {String} first_name
 */
ProfileEdit.prototype['first_name'] = undefined;

/**
 * @member {String} last_name
 */
ProfileEdit.prototype['last_name'] = undefined;

/**
 * @member {String} address_street
 */
ProfileEdit.prototype['address_street'] = undefined;

/**
 * @member {String} address_street2
 */
ProfileEdit.prototype['address_street2'] = undefined;

/**
 * @member {String} address_postal_code
 */
ProfileEdit.prototype['address_postal_code'] = undefined;

/**
 * @member {String} address_city
 */
ProfileEdit.prototype['address_city'] = undefined;

/**
 * @member {module:model/ProfileEdit.AddressCountryEnum} address_country
 */
ProfileEdit.prototype['address_country'] = undefined;

/**
 * Enter a phone number so Thalia may reach you
 * @member {String} phone_number
 */
ProfileEdit.prototype['phone_number'] = undefined;

/**
 * Show your birthday to other members on your profile page and in the birthday calendar
 * @member {Boolean} show_birthday
 */
ProfileEdit.prototype['show_birthday'] = undefined;

/**
 * Website to display on your profile page
 * @member {String} website
 */
ProfileEdit.prototype['website'] = undefined;

/**
 * @member {File} photo
 */
ProfileEdit.prototype['photo'] = undefined;

/**
 * Who should we contact in case of emergencies
 * @member {String} emergency_contact
 */
ProfileEdit.prototype['emergency_contact'] = undefined;

/**
 * The phone number for the emergency contact
 * @member {String} emergency_contact_phone_number
 */
ProfileEdit.prototype['emergency_contact_phone_number'] = undefined;

/**
 * Text to display on your profile
 * @member {String} profile_description
 */
ProfileEdit.prototype['profile_description'] = undefined;

/**
 * @member {String} nickname
 */
ProfileEdit.prototype['nickname'] = undefined;

/**
 * @member {module:model/ProfileEdit.DisplayNamePreferenceEnum} display_name_preference
 */
ProfileEdit.prototype['display_name_preference'] = undefined;

/**
 * @member {String} language
 */
ProfileEdit.prototype['language'] = undefined;

/**
 * Receive mailings about vacancies and events from Thalia's partners.
 * @member {Boolean} receive_optin
 */
ProfileEdit.prototype['receive_optin'] = undefined;

/**
 * Receive the Thalia Newsletter
 * @member {Boolean} receive_newsletter
 */
ProfileEdit.prototype['receive_newsletter'] = undefined;

/**
 * Receive printed Thabloid magazines
 * @member {Boolean} receive_magazine
 */
ProfileEdit.prototype['receive_magazine'] = undefined;

/**
 * @member {String} display_name
 */
ProfileEdit.prototype['display_name'] = undefined;

/**
 * @member {String} avatar
 */
ProfileEdit.prototype['avatar'] = undefined;

/**
 * @member {Date} birthday
 */
ProfileEdit.prototype['birthday'] = undefined;

/**
 * The year this member started studying.
 * @member {Number} starting_year
 */
ProfileEdit.prototype['starting_year'] = undefined;

/**
 * @member {module:model/ProfileEdit.ProgrammeEnum} programme
 */
ProfileEdit.prototype['programme'] = undefined;

/**
 * @member {String} membership_type
 */
ProfileEdit.prototype['membership_type'] = undefined;

/**
 * @member {String} achievements
 */
ProfileEdit.prototype['achievements'] = undefined;

/**
 * @member {String} societies
 */
ProfileEdit.prototype['societies'] = undefined;

/**
 * Allowed values for the <code>address_country</code> property.
 * @enum {String}
 * @readonly
 */
ProfileEdit['AddressCountryEnum'] = {
  /**
   * value: "AX"
   * @const
   */
  AX: 'AX',

  /**
   * value: "AL"
   * @const
   */
  AL: 'AL',

  /**
   * value: "AD"
   * @const
   */
  AD: 'AD',

  /**
   * value: "AT"
   * @const
   */
  AT: 'AT',

  /**
   * value: "BY"
   * @const
   */
  BY: 'BY',

  /**
   * value: "BE"
   * @const
   */
  BE: 'BE',

  /**
   * value: "BA"
   * @const
   */
  BA: 'BA',

  /**
   * value: "BG"
   * @const
   */
  BG: 'BG',

  /**
   * value: "HR"
   * @const
   */
  HR: 'HR',

  /**
   * value: "CZ"
   * @const
   */
  CZ: 'CZ',

  /**
   * value: "DK"
   * @const
   */
  DK: 'DK',

  /**
   * value: "EE"
   * @const
   */
  EE: 'EE',

  /**
   * value: "FO"
   * @const
   */
  FO: 'FO',

  /**
   * value: "FI"
   * @const
   */
  FI: 'FI',

  /**
   * value: "FR"
   * @const
   */
  FR: 'FR',

  /**
   * value: "DE"
   * @const
   */
  DE: 'DE',

  /**
   * value: "GI"
   * @const
   */
  GI: 'GI',

  /**
   * value: "GR"
   * @const
   */
  GR: 'GR',

  /**
   * value: "GG"
   * @const
   */
  GG: 'GG',

  /**
   * value: "VA"
   * @const
   */
  VA: 'VA',

  /**
   * value: "HU"
   * @const
   */
  HU: 'HU',

  /**
   * value: "IS"
   * @const
   */
  IS: 'IS',

  /**
   * value: "IE"
   * @const
   */
  IE: 'IE',

  /**
   * value: "IM"
   * @const
   */
  IM: 'IM',

  /**
   * value: "IT"
   * @const
   */
  IT: 'IT',

  /**
   * value: "JE"
   * @const
   */
  JE: 'JE',

  /**
   * value: "LV"
   * @const
   */
  LV: 'LV',

  /**
   * value: "LI"
   * @const
   */
  LI: 'LI',

  /**
   * value: "LT"
   * @const
   */
  LT: 'LT',

  /**
   * value: "LU"
   * @const
   */
  LU: 'LU',

  /**
   * value: "MK"
   * @const
   */
  MK: 'MK',

  /**
   * value: "MT"
   * @const
   */
  MT: 'MT',

  /**
   * value: "MD"
   * @const
   */
  MD: 'MD',

  /**
   * value: "MC"
   * @const
   */
  MC: 'MC',

  /**
   * value: "ME"
   * @const
   */
  ME: 'ME',

  /**
   * value: "NL"
   * @const
   */
  NL: 'NL',

  /**
   * value: "NO"
   * @const
   */
  NO: 'NO',

  /**
   * value: "PL"
   * @const
   */
  PL: 'PL',

  /**
   * value: "PT"
   * @const
   */
  PT: 'PT',

  /**
   * value: "RO"
   * @const
   */
  RO: 'RO',

  /**
   * value: "RU"
   * @const
   */
  RU: 'RU',

  /**
   * value: "SM"
   * @const
   */
  SM: 'SM',

  /**
   * value: "RS"
   * @const
   */
  RS: 'RS',

  /**
   * value: "SK"
   * @const
   */
  SK: 'SK',

  /**
   * value: "SI"
   * @const
   */
  SI: 'SI',

  /**
   * value: "ES"
   * @const
   */
  ES: 'ES',

  /**
   * value: "SJ"
   * @const
   */
  SJ: 'SJ',

  /**
   * value: "SE"
   * @const
   */
  SE: 'SE',

  /**
   * value: "CH"
   * @const
   */
  CH: 'CH',

  /**
   * value: "UA"
   * @const
   */
  UA: 'UA',

  /**
   * value: "GB"
   * @const
   */
  GB: 'GB',
};

/**
 * Allowed values for the <code>display_name_preference</code> property.
 * @enum {String}
 * @readonly
 */
ProfileEdit['DisplayNamePreferenceEnum'] = {
  /**
   * value: "full"
   * @const
   */
  full: 'full',

  /**
   * value: "nickname"
   * @const
   */
  nickname: 'nickname',

  /**
   * value: "firstname"
   * @const
   */
  firstname: 'firstname',

  /**
   * value: "initials"
   * @const
   */
  initials: 'initials',

  /**
   * value: "fullnick"
   * @const
   */
  fullnick: 'fullnick',

  /**
   * value: "nicklast"
   * @const
   */
  nicklast: 'nicklast',
};

/**
 * Allowed values for the <code>programme</code> property.
 * @enum {String}
 * @readonly
 */
ProfileEdit['ProgrammeEnum'] = {
  /**
   * value: "computingscience"
   * @const
   */
  computingscience: 'computingscience',

  /**
   * value: "informationscience"
   * @const
   */
  informationscience: 'informationscience',
};

export default ProfileEdit;
