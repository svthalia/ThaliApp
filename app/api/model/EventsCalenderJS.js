/**
 * API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unknown
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventsCalenderJS model module.
 * @module model/EventsCalenderJS
 * @version unknown
 */
class EventsCalenderJS {
  /**
   * Constructs a new <code>EventsCalenderJS</code>.
   * @alias module:model/EventsCalenderJS
   */
  constructor() {
    EventsCalenderJS.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>EventsCalenderJS</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EventsCalenderJS} obj Optional instance to populate.
   * @return {module:model/EventsCalenderJS} The populated <code>EventsCalenderJS</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new EventsCalenderJS();

      if (data.hasOwnProperty('start')) {
        obj['start'] = ApiClient.convertToType(data['start'], 'String');
      }
      if (data.hasOwnProperty('end')) {
        obj['end'] = ApiClient.convertToType(data['end'], 'String');
      }
      if (data.hasOwnProperty('allDay')) {
        obj['allDay'] = ApiClient.convertToType(data['allDay'], 'String');
      }
      if (data.hasOwnProperty('isBirthday')) {
        obj['isBirthday'] = ApiClient.convertToType(data['isBirthday'], 'String');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('classNames')) {
        obj['classNames'] = ApiClient.convertToType(data['classNames'], 'String');
      }
      if (data.hasOwnProperty('blank')) {
        obj['blank'] = ApiClient.convertToType(data['blank'], 'String');
      }
    }
    return obj;
  }
}

/**
 * @member {String} start
 */
EventsCalenderJS.prototype['start'] = undefined;

/**
 * @member {String} end
 */
EventsCalenderJS.prototype['end'] = undefined;

/**
 * @member {String} allDay
 */
EventsCalenderJS.prototype['allDay'] = undefined;

/**
 * @member {String} isBirthday
 */
EventsCalenderJS.prototype['isBirthday'] = undefined;

/**
 * @member {String} url
 */
EventsCalenderJS.prototype['url'] = undefined;

/**
 * @member {String} title
 */
EventsCalenderJS.prototype['title'] = undefined;

/**
 * @member {String} description
 */
EventsCalenderJS.prototype['description'] = undefined;

/**
 * @member {String} classNames
 */
EventsCalenderJS.prototype['classNames'] = undefined;

/**
 * @member {String} blank
 */
EventsCalenderJS.prototype['blank'] = undefined;

export default EventsCalenderJS;
