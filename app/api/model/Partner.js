/**
 * API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unknown
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Partner model module.
 * @module model/Partner
 * @version unknown
 */
class Partner {
  /**
   * Constructs a new <code>Partner</code>.
   * @alias module:model/Partner
   * @param name {String}
   * @param address {String}
   * @param zipCode {String}
   * @param city {String}
   * @param logo {File}
   */
  constructor(name, address, zipCode, city, logo) {
    Partner.initialize(this, name, address, zipCode, city, logo);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, name, address, zipCode, city, logo) {
    obj['name'] = name;
    obj['address'] = address;
    obj['zip_code'] = zipCode;
    obj['city'] = city;
    obj['logo'] = logo;
  }

  /**
   * Constructs a <code>Partner</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Partner} obj Optional instance to populate.
   * @return {module:model/Partner} The populated <code>Partner</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Partner();

      if (data.hasOwnProperty('pk')) {
        obj['pk'] = ApiClient.convertToType(data['pk'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('link')) {
        obj['link'] = ApiClient.convertToType(data['link'], 'String');
      }
      if (data.hasOwnProperty('company_profile')) {
        obj['company_profile'] = ApiClient.convertToType(
          data['company_profile'],
          'String'
        );
      }
      if (data.hasOwnProperty('address')) {
        obj['address'] = ApiClient.convertToType(data['address'], 'String');
      }
      if (data.hasOwnProperty('zip_code')) {
        obj['zip_code'] = ApiClient.convertToType(data['zip_code'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = ApiClient.convertToType(data['city'], 'String');
      }
      if (data.hasOwnProperty('logo')) {
        obj['logo'] = ApiClient.convertToType(data['logo'], File);
      }
    }
    return obj;
  }
}

/**
 * @member {Number} pk
 */
Partner.prototype['pk'] = undefined;

/**
 * @member {String} name
 */
Partner.prototype['name'] = undefined;

/**
 * @member {String} link
 */
Partner.prototype['link'] = undefined;

/**
 * @member {String} company_profile
 */
Partner.prototype['company_profile'] = undefined;

/**
 * @member {String} address
 */
Partner.prototype['address'] = undefined;

/**
 * @member {String} zip_code
 */
Partner.prototype['zip_code'] = undefined;

/**
 * @member {String} city
 */
Partner.prototype['city'] = undefined;

/**
 * @member {File} logo
 */
Partner.prototype['logo'] = undefined;

export default Partner;
