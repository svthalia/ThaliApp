/**
 * API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unknown
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventRegistration model module.
 * @module model/EventRegistration
 * @version unknown
 */
class EventRegistration {
  /**
   * Constructs a new <code>EventRegistration</code>.
   * @alias module:model/EventRegistration
   * @param payment {module:model/EventRegistration.PaymentEnum}
   */
  constructor(payment) {
    EventRegistration.initialize(this, payment);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, payment) {
    obj['payment'] = payment;
  }

  /**
   * Constructs a <code>EventRegistration</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EventRegistration} obj Optional instance to populate.
   * @return {module:model/EventRegistration} The populated <code>EventRegistration</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new EventRegistration();

      if (data.hasOwnProperty('pk')) {
        obj['pk'] = ApiClient.convertToType(data['pk'], 'Number');
      }
      if (data.hasOwnProperty('member')) {
        obj['member'] = ApiClient.convertToType(data['member'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('photo')) {
        obj['photo'] = ApiClient.convertToType(data['photo'], 'String');
      }
      if (data.hasOwnProperty('avatar')) {
        obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');
      }
      if (data.hasOwnProperty('registered_on')) {
        obj['registered_on'] = ApiClient.convertToType(data['registered_on'], 'Date');
      }
      if (data.hasOwnProperty('is_late_cancellation')) {
        obj['is_late_cancellation'] = ApiClient.convertToType(
          data['is_late_cancellation'],
          'String'
        );
      }
      if (data.hasOwnProperty('is_cancelled')) {
        obj['is_cancelled'] = ApiClient.convertToType(data['is_cancelled'], 'String');
      }
      if (data.hasOwnProperty('queue_position')) {
        obj['queue_position'] = ApiClient.convertToType(
          data['queue_position'],
          'String'
        );
      }
      if (data.hasOwnProperty('payment')) {
        obj['payment'] = ApiClient.convertToType(data['payment'], 'String');
      }
      if (data.hasOwnProperty('present')) {
        obj['present'] = ApiClient.convertToType(data['present'], 'Boolean');
      }
    }
    return obj;
  }
}

/**
 * @member {Number} pk
 */
EventRegistration.prototype['pk'] = undefined;

/**
 * @member {String} member
 */
EventRegistration.prototype['member'] = undefined;

/**
 * @member {String} name
 */
EventRegistration.prototype['name'] = undefined;

/**
 * @member {String} photo
 */
EventRegistration.prototype['photo'] = undefined;

/**
 * @member {String} avatar
 */
EventRegistration.prototype['avatar'] = undefined;

/**
 * @member {Date} registered_on
 */
EventRegistration.prototype['registered_on'] = undefined;

/**
 * @member {String} is_late_cancellation
 */
EventRegistration.prototype['is_late_cancellation'] = undefined;

/**
 * @member {String} is_cancelled
 */
EventRegistration.prototype['is_cancelled'] = undefined;

/**
 * @member {String} queue_position
 */
EventRegistration.prototype['queue_position'] = undefined;

/**
 * @member {module:model/EventRegistration.PaymentEnum} payment
 */
EventRegistration.prototype['payment'] = undefined;

/**
 * @member {Boolean} present
 */
EventRegistration.prototype['present'] = undefined;

/**
 * Allowed values for the <code>payment</code> property.
 * @enum {String}
 * @readonly
 */
EventRegistration['PaymentEnum'] = {
  /**
   * value: "cash_payment"
   * @const
   */
  cash_payment: 'cash_payment',

  /**
   * value: "card_payment"
   * @const
   */
  card_payment: 'card_payment',

  /**
   * value: "tpay_payment"
   * @const
   */
  tpay_payment: 'tpay_payment',

  /**
   * value: "wire_payment"
   * @const
   */
  wire_payment: 'wire_payment',

  /**
   * value: "no_payment"
   * @const
   */
  no_payment: 'no_payment',
};

export default EventRegistration;
