image: mhart/alpine-node:10

variables:
    GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle

stages:
  - validate
  - build

eslint:
    stage: validate
    before_script:
        - apk update && apk add git
        - yarn install
    script:
        - yarn lint:ci

jest:
    stage: validate
    before_script:
        - apk update && apk add git
        - yarn install
    script:
        - yarn jest

# We don't need this step as long as there are no tests for the native Android code
# test android:
#     stage: validate
#     script:
#         - cd $CI_PROJECT_DIR/android/
#         - gradle --no-daemon --continue ":app:testDebugUnitTest" ":app:testReleaseUnitTest"
#     cache:
#         key: $CI_JOB_NAME
#         paths:
#             - .gradle/wrapper/
#             - .gradle/caches/
#     artifacts:
#         expire_in: 1 hour
#         paths:
#             - .gradle/wrapper/
#             - .gradle/caches/

build android:
    image: thalia/android-react-native:latest
    stage: build
    cache:
      key: gradle cache
      paths:
          - $CI_PROJECT_DIR/.gradle/wrapper/
          - $CI_PROJECT_DIR/.gradle/caches/
    before_script:
        - set +o pipefail
        - yes | /opt/android-sdk-linux/tools/bin/sdkmanager --licenses
        - set -o pipefail
        - yarn install
    script:
        - echo $SENTRY_PROPS | base64 -d > ./android/sentry.properties
        - echo $PROD_ENV | base64 -d > .env
        - cd $CI_PROJECT_DIR/android/
        - ./gradlew --no-daemon ":app:assemble"
    artifacts:
        paths:
            - $CI_PROJECT_DIR/android/app/build/outputs/apk/debug/app-debug.apk
            - $CI_PROJECT_DIR/android/app/build/outputs/apk/release/app-release-unsigned.apk
            - $CI_PROJECT_DIR/android/app/build/outputs/apk/release/app-release.apk
